#!/bin/bash

# Pre-commit hook to run Flutter static analysis
# This hook runs static analysis on the Flutter projects and blocks commits if issues are found

set -e  # Exit on any error

# Activate local toolchain environment
GIT_ROOT=$(git rev-parse --show-toplevel)
if [[ -f "$GIT_ROOT/tools/activate-env.sh" ]]; then
    source "$GIT_ROOT/tools/activate-env.sh"
else
    echo "Warning: Could not find toolchain activation script at $GIT_ROOT/tools/activate-env.sh"
    echo "Pre-commit hook will attempt to use system Flutter installation"
fi

# ANSI color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Project paths to analyze (relative to git root)
FLUTTER_PROJECTS=(
    "spike/ghsender"
    "spike/communication-spike"
)

echo -e "${BLUE}üîç Running static analysis on Flutter projects...${NC}"

# Track analysis status
ANALYSIS_FAILED=false

# Function to run static analysis on a Flutter project
run_flutter_analysis() {
    local project_path="$1"
    local full_path="$GIT_ROOT/$project_path"
    
    if [ ! -d "$full_path" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Warning: Flutter project directory not found: $project_path${NC}"
        return 0
    fi
    
    if [ ! -f "$full_path/pubspec.yaml" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Warning: No pubspec.yaml found in $project_path, skipping...${NC}"
        return 0
    fi
    
    echo -e "${BLUE}üìÅ Analyzing: $project_path${NC}"
    
    cd "$full_path"
    
    # Check if Flutter is available
    if ! command -v flutter &> /dev/null; then
        echo -e "${RED}‚ùå Flutter command not found. Please ensure Flutter is installed and in PATH.${NC}"
        return 1
    fi
    
    # Get Flutter version for diagnostics
    echo -e "${BLUE}Flutter version:${NC}"
    flutter --version
    echo ""
    
    # Run Flutter analyze with fatal warnings
    echo -e "${BLUE}Running dart analyze --fatal-warnings...${NC}"
    if ! dart analyze --fatal-warnings 2>&1; then
        echo -e "${RED}‚ùå Static analysis failed for $project_path${NC}"
        echo -e "${RED}   Please fix the above issues before committing.${NC}"
        return 1
    fi
    
    echo -e "${GREEN}‚úÖ Static analysis passed for $project_path${NC}"
    return 0
}

# Analyze each Flutter project
for project in "${FLUTTER_PROJECTS[@]}"; do
    if ! run_flutter_analysis "$project"; then
        ANALYSIS_FAILED=true
    fi
done

# Check if any analysis failed
if [ "$ANALYSIS_FAILED" = true ]; then
    echo ""
    echo -e "${RED}‚ùå Pre-commit hook failed: Static analysis issues detected${NC}"
    echo -e "${YELLOW}üìã To fix these issues:${NC}"
    echo -e "   1. Review and fix the reported warnings and errors"
    echo -e "   2. Run 'flutter analyze' or 'dart analyze' in the project directory"
    echo -e "   3. Commit your changes again"
    echo ""
    echo -e "${YELLOW}üí° To bypass this hook (not recommended):${NC}"
    echo -e "   git commit --no-verify"
    echo ""
    exit 1
fi

echo -e "${GREEN}üéâ All static analysis checks passed!${NC}"
exit 0